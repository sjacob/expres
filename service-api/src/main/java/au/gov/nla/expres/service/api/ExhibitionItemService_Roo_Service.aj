// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.gov.nla.expres.service.api;

import au.gov.nla.expres.model.CollectionItem;
import au.gov.nla.expres.model.Exhibition;
import au.gov.nla.expres.model.ExhibitionItem;
import au.gov.nla.expres.service.api.ExhibitionItemService;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.format.EntityResolver;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

privileged aspect ExhibitionItemService_Roo_Service {
    
    declare parents: ExhibitionItemService extends EntityResolver<ExhibitionItem, Long>;
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return ExhibitionItem
     */
    public abstract ExhibitionItem ExhibitionItemService.findOne(Long id);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param exhibitionItem
     */
    public abstract void ExhibitionItemService.delete(ExhibitionItem exhibitionItem);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    public abstract List<ExhibitionItem> ExhibitionItemService.save(Iterable<ExhibitionItem> entities);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    public abstract void ExhibitionItemService.delete(Iterable<Long> ids);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return ExhibitionItem
     */
    public abstract ExhibitionItem ExhibitionItemService.save(ExhibitionItem entity);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return ExhibitionItem
     */
    public abstract ExhibitionItem ExhibitionItemService.findOneForUpdate(Long id);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public abstract List<ExhibitionItem> ExhibitionItemService.findAll(Iterable<Long> ids);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public abstract List<ExhibitionItem> ExhibitionItemService.findAll();
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public abstract long ExhibitionItemService.count();
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<ExhibitionItem> ExhibitionItemService.findAll(GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<ExhibitionItem> ExhibitionItemService.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param exhibitionItem
     * @param pageOpeningsToAdd
     * @return ExhibitionItem
     */
    public abstract ExhibitionItem ExhibitionItemService.addToPageOpenings(ExhibitionItem exhibitionItem, Iterable<Long> pageOpeningsToAdd);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param exhibitionItem
     * @param pageOpeningsToRemove
     * @return ExhibitionItem
     */
    public abstract ExhibitionItem ExhibitionItemService.removeFromPageOpenings(ExhibitionItem exhibitionItem, Iterable<Long> pageOpeningsToRemove);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param exhibitionItem
     * @param pageOpenings
     * @return ExhibitionItem
     */
    public abstract ExhibitionItem ExhibitionItemService.setPageOpenings(ExhibitionItem exhibitionItem, Iterable<Long> pageOpenings);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param eItem
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<ExhibitionItem> ExhibitionItemService.findByEItem(CollectionItem eItem, GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param exhibition
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<ExhibitionItem> ExhibitionItemService.findByExhibition(Exhibition exhibition, GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param eItem
     * @return Long
     */
    public abstract long ExhibitionItemService.countByEItem(CollectionItem eItem);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param exhibition
     * @return Long
     */
    public abstract long ExhibitionItemService.countByExhibition(Exhibition exhibition);
    
}
