// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.gov.nla.expres.application.web;

import au.gov.nla.expres.application.web.ExhibitionItemsItemPageOpeningsThymeleafController;
import au.gov.nla.expres.application.web.ExhibitionItemsItemPageOpeningsThymeleafLinkFactory;
import io.springlets.web.mvc.util.MethodLinkFactory;
import io.springlets.web.mvc.util.SpringletsMvcUriComponentsBuilder;
import java.util.Map;
import org.springframework.stereotype.Component;
import org.springframework.web.util.UriComponents;

privileged aspect ExhibitionItemsItemPageOpeningsThymeleafLinkFactory_Roo_LinkFactory {
    
    declare parents: ExhibitionItemsItemPageOpeningsThymeleafLinkFactory implements MethodLinkFactory<ExhibitionItemsItemPageOpeningsThymeleafController>;
    
    declare @type: ExhibitionItemsItemPageOpeningsThymeleafLinkFactory: @Component;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String ExhibitionItemsItemPageOpeningsThymeleafLinkFactory.DATATABLES = "datatables";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String ExhibitionItemsItemPageOpeningsThymeleafLinkFactory.DATATABLESBYIDSIN = "datatablesByIdsIn";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String ExhibitionItemsItemPageOpeningsThymeleafLinkFactory.CREATEFORM = "createForm";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String ExhibitionItemsItemPageOpeningsThymeleafLinkFactory.REMOVEFROMPAGEOPENINGS = "removeFromPageOpenings";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String ExhibitionItemsItemPageOpeningsThymeleafLinkFactory.REMOVEFROMPAGEOPENINGSBATCH = "removeFromPageOpeningsBatch";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String ExhibitionItemsItemPageOpeningsThymeleafLinkFactory.CREATE = "create";
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<ExhibitionItemsItemPageOpeningsThymeleafController> ExhibitionItemsItemPageOpeningsThymeleafLinkFactory.getControllerClass() {
        return ExhibitionItemsItemPageOpeningsThymeleafController.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param methodName
     * @param parameters
     * @param pathVariables
     * @return UriComponents
     */
    public UriComponents ExhibitionItemsItemPageOpeningsThymeleafLinkFactory.toUri(String methodName, Object[] parameters, Map<String, Object> pathVariables) {
        if (methodName.equals(DATATABLES)) {
            return SpringletsMvcUriComponentsBuilder.fromMethodCall(SpringletsMvcUriComponentsBuilder.on(getControllerClass()).datatables(null, null, null, null, null)).buildAndExpand(pathVariables);
        }
        if (methodName.equals(DATATABLESBYIDSIN)) {
            return SpringletsMvcUriComponentsBuilder.fromMethodCall(SpringletsMvcUriComponentsBuilder.on(getControllerClass()).datatablesByIdsIn(null, null, null, null, null)).buildAndExpand(pathVariables);
        }
        if (methodName.equals(CREATEFORM)) {
            return SpringletsMvcUriComponentsBuilder.fromMethodCall(SpringletsMvcUriComponentsBuilder.on(getControllerClass()).createForm(null, null)).buildAndExpand(pathVariables);
        }
        if (methodName.equals(REMOVEFROMPAGEOPENINGS)) {
            return SpringletsMvcUriComponentsBuilder.fromMethodCall(SpringletsMvcUriComponentsBuilder.on(getControllerClass()).removeFromPageOpenings(null, null)).buildAndExpand(pathVariables);
        }
        if (methodName.equals(REMOVEFROMPAGEOPENINGSBATCH)) {
            return SpringletsMvcUriComponentsBuilder.fromMethodCall(SpringletsMvcUriComponentsBuilder.on(getControllerClass()).removeFromPageOpeningsBatch(null, null)).buildAndExpand(pathVariables);
        }
        if (methodName.equals(CREATE)) {
            return SpringletsMvcUriComponentsBuilder.fromMethodCall(SpringletsMvcUriComponentsBuilder.on(getControllerClass()).create(null, null, null, null, null)).buildAndExpand(pathVariables);
        }
        throw new IllegalArgumentException("Invalid method name: " + methodName);
    }
    
}
