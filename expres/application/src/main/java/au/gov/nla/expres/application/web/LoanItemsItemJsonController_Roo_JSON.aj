// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.gov.nla.expres.application.web;

import au.gov.nla.expres.application.web.LoanItemsItemJsonController;
import au.gov.nla.expres.model.LoanItem;
import au.gov.nla.expres.service.api.LoanItemService;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect LoanItemsItemJsonController_Roo_JSON {
    
    declare @type: LoanItemsItemJsonController: @RestController;
    
    declare @type: LoanItemsItemJsonController: @RequestMapping(value = "/api/loanitems/{loanItem}", name = "LoanItemsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param loanItemService
     */
    @Autowired
    public LoanItemsItemJsonController.new(LoanItemService loanItemService) {
        this.loanItemService = loanItemService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return LoanItem
     */
    @ModelAttribute
    public LoanItem LoanItemsItemJsonController.getLoanItem(@PathVariable("loanItem") Long id) {
        LoanItem loanItem = loanItemService.findOne(id);
        if (loanItem == null) {
            throw new NotFoundException(String.format("LoanItem with identifier '%s' not found",id));
        }
        return loanItem;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param loanItem
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> LoanItemsItemJsonController.show(@ModelAttribute LoanItem loanItem) {
        return ResponseEntity.ok(loanItem);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param loanItem
     * @return UriComponents
     */
    public static UriComponents LoanItemsItemJsonController.showURI(LoanItem loanItem) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(LoanItemsItemJsonController.class).show(loanItem))
            .buildAndExpand(loanItem.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedLoanItem
     * @param loanItem
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> LoanItemsItemJsonController.update(@ModelAttribute LoanItem storedLoanItem, @Valid @RequestBody LoanItem loanItem, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        loanItem.setId(storedLoanItem.getId());
        getLoanItemService().save(loanItem);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param loanItem
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> LoanItemsItemJsonController.delete(@ModelAttribute LoanItem loanItem) {
        getLoanItemService().delete(loanItem);
        return ResponseEntity.ok().build();
    }
    
}
