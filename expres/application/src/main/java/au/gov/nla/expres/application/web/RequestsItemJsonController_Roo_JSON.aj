// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.gov.nla.expres.application.web;

import au.gov.nla.expres.application.web.RequestsItemJsonController;
import au.gov.nla.expres.model.Request;
import au.gov.nla.expres.service.api.RequestService;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect RequestsItemJsonController_Roo_JSON {
    
    declare @type: RequestsItemJsonController: @RestController;
    
    declare @type: RequestsItemJsonController: @RequestMapping(value = "/api/requests/{request}", name = "RequestsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param requestService
     */
    @Autowired
    public RequestsItemJsonController.new(RequestService requestService) {
        this.requestService = requestService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Request
     */
    @ModelAttribute
    public Request RequestsItemJsonController.getRequest(@PathVariable("request") Long id) {
        Request request = requestService.findOne(id);
        if (request == null) {
            throw new NotFoundException(String.format("Request with identifier '%s' not found",id));
        }
        return request;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param request
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> RequestsItemJsonController.show(@ModelAttribute Request request) {
        return ResponseEntity.ok(request);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param request
     * @return UriComponents
     */
    public static UriComponents RequestsItemJsonController.showURI(Request request) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(RequestsItemJsonController.class).show(request))
            .buildAndExpand(request.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedRequest
     * @param request
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> RequestsItemJsonController.update(@ModelAttribute Request storedRequest, @Valid @RequestBody Request request, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        request.setId(storedRequest.getId());
        getRequestService().save(request);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param request
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> RequestsItemJsonController.delete(@ModelAttribute Request request) {
        getRequestService().delete(request);
        return ResponseEntity.ok().build();
    }
    
}
