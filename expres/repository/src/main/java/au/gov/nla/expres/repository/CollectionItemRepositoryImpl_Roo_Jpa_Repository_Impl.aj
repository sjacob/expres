// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.gov.nla.expres.repository;

import au.gov.nla.expres.model.CollectionItem;
import au.gov.nla.expres.model.QCollectionItem;
import au.gov.nla.expres.repository.CollectionItemRepositoryCustom;
import au.gov.nla.expres.repository.CollectionItemRepositoryImpl;
import com.querydsl.core.types.Path;
import com.querydsl.jpa.JPQLQuery;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.jpa.repository.support.QueryDslRepositorySupportExt.AttributeMappingBuilder;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.transaction.annotation.Transactional;

privileged aspect CollectionItemRepositoryImpl_Roo_Jpa_Repository_Impl {
    
    declare parents: CollectionItemRepositoryImpl implements CollectionItemRepositoryCustom;
    
    declare @type: CollectionItemRepositoryImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.BIB_ID = "bibId";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.CALL_NUMBER = "callNumber";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.COPY = "copy";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.ARCHIVE_SPACE_NUMBER = "archiveSpaceNumber";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.SPECIAL_COLLECTIONS_PAPERS = "specialCollectionsPapers";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.HPRM_NUMBER = "hprmNumber";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.BARCODE_NUMBER = "barcodeNumber";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.PERSISTENT_IDENTIFIER = "persistentIdentifier";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.COLLECTION = "collection";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.TITLE = "title";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.CREATOR = "creator";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.DATE_OF_ITEM = "dateOfItem";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.ITEM_TYPE = "itemType";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.INSCRIPTION = "inscription";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.ORIGINAL_LANGUAGE = "originalLanguage";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.PUBLISHER = "publisher";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.ACQUISITION_DETAILS = "acquisitionDetails";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.COPYRIGHT_STATUS = "copyrightStatus";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.RESEARCH_NOTES = "researchNotes";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.ITEM_SIZE = "itemSize";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.MEDIUM = "medium";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.DESCRIPTION_PHYSICAL = "descriptionPhysical";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.ORIGINAL_FOR_DISPLAY = "originalForDisplay";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.BOUND_WITH_PAGE_TURNS = "boundWithPageTurns";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.MAXIMUM_HEIGHT = "maximumHeight";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.MAXIMUM_ANGLE_PAGE_OPENING = "maximumAnglePageOpening";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.DISPLAY_RECOMMENDATION = "displayRecommendation";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.EXTERNAL_FRAME_SIZE = "externalFrameSize";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.INTERNAL_FRAME_SIZE = "internalFrameSize";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.FRAMING_ORIENTATION = "framingOrientation";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.FRAME_SIZE = "frameSize";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.DISPLAY_REQUESTS_FOR_PRESERVATION = "displayRequestsForPreservation";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.MATT_COLOUR = "mattColour";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.FRAMING_NOTES = "framingNotes";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.SUPPORT_TYPE = "supportType";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.SUPPORT_NOTES = "supportNotes";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.SUPPORT_NUMBER_CODE = "supportNumberCode";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.MODIFIED_DATE = "modifiedDate";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.MODIFIED_BY = "modifiedBy";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.CREATED_DATE = "createdDate";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String CollectionItemRepositoryImpl.CREATED_BY = "createdBy";
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<CollectionItem> CollectionItemRepositoryImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        
        QCollectionItem collectionItem = QCollectionItem.collectionItem;
        
        JPQLQuery<CollectionItem> query = from(collectionItem);
        
        Path<?>[] paths = new Path<?>[] {collectionItem.bibId,collectionItem.callNumber,collectionItem.copy,collectionItem.archiveSpaceNumber,collectionItem.specialCollectionsPapers,collectionItem.hprmNumber,collectionItem.barcodeNumber,collectionItem.persistentIdentifier,collectionItem.collection,collectionItem.title,collectionItem.creator,collectionItem.dateOfItem,collectionItem.itemType,collectionItem.inscription,collectionItem.originalLanguage,collectionItem.publisher,collectionItem.acquisitionDetails,collectionItem.copyrightStatus,collectionItem.researchNotes,collectionItem.itemSize,collectionItem.medium,collectionItem.descriptionPhysical,collectionItem.originalForDisplay,collectionItem.boundWithPageTurns,collectionItem.maximumHeight,collectionItem.maximumAnglePageOpening,collectionItem.displayRecommendation,collectionItem.externalFrameSize,collectionItem.internalFrameSize,collectionItem.framingOrientation,collectionItem.frameSize,collectionItem.displayRequestsForPreservation,collectionItem.mattColour,collectionItem.framingNotes,collectionItem.supportType,collectionItem.supportNotes,collectionItem.supportNumberCode,collectionItem.modifiedDate,collectionItem.modifiedBy,collectionItem.createdDate,collectionItem.createdBy};        
        applyGlobalSearch(globalSearch, query, paths);
        
        AttributeMappingBuilder mapping = buildMapper()
			.map(BIB_ID, collectionItem.bibId)
			.map(CALL_NUMBER, collectionItem.callNumber)
			.map(COPY, collectionItem.copy)
			.map(ARCHIVE_SPACE_NUMBER, collectionItem.archiveSpaceNumber)
			.map(SPECIAL_COLLECTIONS_PAPERS, collectionItem.specialCollectionsPapers)
			.map(HPRM_NUMBER, collectionItem.hprmNumber)
			.map(BARCODE_NUMBER, collectionItem.barcodeNumber)
			.map(PERSISTENT_IDENTIFIER, collectionItem.persistentIdentifier)
			.map(COLLECTION, collectionItem.collection)
			.map(TITLE, collectionItem.title)
			.map(CREATOR, collectionItem.creator)
			.map(DATE_OF_ITEM, collectionItem.dateOfItem)
			.map(ITEM_TYPE, collectionItem.itemType)
			.map(INSCRIPTION, collectionItem.inscription)
			.map(ORIGINAL_LANGUAGE, collectionItem.originalLanguage)
			.map(PUBLISHER, collectionItem.publisher)
			.map(ACQUISITION_DETAILS, collectionItem.acquisitionDetails)
			.map(COPYRIGHT_STATUS, collectionItem.copyrightStatus)
			.map(RESEARCH_NOTES, collectionItem.researchNotes)
			.map(ITEM_SIZE, collectionItem.itemSize)
			.map(MEDIUM, collectionItem.medium)
			.map(DESCRIPTION_PHYSICAL, collectionItem.descriptionPhysical)
			.map(ORIGINAL_FOR_DISPLAY, collectionItem.originalForDisplay)
			.map(BOUND_WITH_PAGE_TURNS, collectionItem.boundWithPageTurns)
			.map(MAXIMUM_HEIGHT, collectionItem.maximumHeight)
			.map(MAXIMUM_ANGLE_PAGE_OPENING, collectionItem.maximumAnglePageOpening)
			.map(DISPLAY_RECOMMENDATION, collectionItem.displayRecommendation)
			.map(EXTERNAL_FRAME_SIZE, collectionItem.externalFrameSize)
			.map(INTERNAL_FRAME_SIZE, collectionItem.internalFrameSize)
			.map(FRAMING_ORIENTATION, collectionItem.framingOrientation)
			.map(FRAME_SIZE, collectionItem.frameSize)
			.map(DISPLAY_REQUESTS_FOR_PRESERVATION, collectionItem.displayRequestsForPreservation)
			.map(MATT_COLOUR, collectionItem.mattColour)
			.map(FRAMING_NOTES, collectionItem.framingNotes)
			.map(SUPPORT_TYPE, collectionItem.supportType)
			.map(SUPPORT_NOTES, collectionItem.supportNotes)
			.map(SUPPORT_NUMBER_CODE, collectionItem.supportNumberCode)
			.map(MODIFIED_DATE, collectionItem.modifiedDate)
			.map(MODIFIED_BY, collectionItem.modifiedBy)
			.map(CREATED_DATE, collectionItem.createdDate)
			.map(CREATED_BY, collectionItem.createdBy);
        
        applyPagination(pageable, query, mapping);
        applyOrderById(query);
        
        return loadPage(query, pageable, collectionItem);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<CollectionItem> CollectionItemRepositoryImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        
        QCollectionItem collectionItem = QCollectionItem.collectionItem;
        
        JPQLQuery<CollectionItem> query = from(collectionItem);
        
        Path<?>[] paths = new Path<?>[] {collectionItem.bibId,collectionItem.callNumber,collectionItem.copy,collectionItem.archiveSpaceNumber,collectionItem.specialCollectionsPapers,collectionItem.hprmNumber,collectionItem.barcodeNumber,collectionItem.persistentIdentifier,collectionItem.collection,collectionItem.title,collectionItem.creator,collectionItem.dateOfItem,collectionItem.itemType,collectionItem.inscription,collectionItem.originalLanguage,collectionItem.publisher,collectionItem.acquisitionDetails,collectionItem.copyrightStatus,collectionItem.researchNotes,collectionItem.itemSize,collectionItem.medium,collectionItem.descriptionPhysical,collectionItem.originalForDisplay,collectionItem.boundWithPageTurns,collectionItem.maximumHeight,collectionItem.maximumAnglePageOpening,collectionItem.displayRecommendation,collectionItem.externalFrameSize,collectionItem.internalFrameSize,collectionItem.framingOrientation,collectionItem.frameSize,collectionItem.displayRequestsForPreservation,collectionItem.mattColour,collectionItem.framingNotes,collectionItem.supportType,collectionItem.supportNotes,collectionItem.supportNumberCode,collectionItem.modifiedDate,collectionItem.modifiedBy,collectionItem.createdDate,collectionItem.createdBy};        
        applyGlobalSearch(globalSearch, query, paths);
        
        // Also, filter by the provided ids
        query.where(collectionItem.id.in(ids));
        
        AttributeMappingBuilder mapping = buildMapper()
			.map(BIB_ID, collectionItem.bibId)
			.map(CALL_NUMBER, collectionItem.callNumber)
			.map(COPY, collectionItem.copy)
			.map(ARCHIVE_SPACE_NUMBER, collectionItem.archiveSpaceNumber)
			.map(SPECIAL_COLLECTIONS_PAPERS, collectionItem.specialCollectionsPapers)
			.map(HPRM_NUMBER, collectionItem.hprmNumber)
			.map(BARCODE_NUMBER, collectionItem.barcodeNumber)
			.map(PERSISTENT_IDENTIFIER, collectionItem.persistentIdentifier)
			.map(COLLECTION, collectionItem.collection)
			.map(TITLE, collectionItem.title)
			.map(CREATOR, collectionItem.creator)
			.map(DATE_OF_ITEM, collectionItem.dateOfItem)
			.map(ITEM_TYPE, collectionItem.itemType)
			.map(INSCRIPTION, collectionItem.inscription)
			.map(ORIGINAL_LANGUAGE, collectionItem.originalLanguage)
			.map(PUBLISHER, collectionItem.publisher)
			.map(ACQUISITION_DETAILS, collectionItem.acquisitionDetails)
			.map(COPYRIGHT_STATUS, collectionItem.copyrightStatus)
			.map(RESEARCH_NOTES, collectionItem.researchNotes)
			.map(ITEM_SIZE, collectionItem.itemSize)
			.map(MEDIUM, collectionItem.medium)
			.map(DESCRIPTION_PHYSICAL, collectionItem.descriptionPhysical)
			.map(ORIGINAL_FOR_DISPLAY, collectionItem.originalForDisplay)
			.map(BOUND_WITH_PAGE_TURNS, collectionItem.boundWithPageTurns)
			.map(MAXIMUM_HEIGHT, collectionItem.maximumHeight)
			.map(MAXIMUM_ANGLE_PAGE_OPENING, collectionItem.maximumAnglePageOpening)
			.map(DISPLAY_RECOMMENDATION, collectionItem.displayRecommendation)
			.map(EXTERNAL_FRAME_SIZE, collectionItem.externalFrameSize)
			.map(INTERNAL_FRAME_SIZE, collectionItem.internalFrameSize)
			.map(FRAMING_ORIENTATION, collectionItem.framingOrientation)
			.map(FRAME_SIZE, collectionItem.frameSize)
			.map(DISPLAY_REQUESTS_FOR_PRESERVATION, collectionItem.displayRequestsForPreservation)
			.map(MATT_COLOUR, collectionItem.mattColour)
			.map(FRAMING_NOTES, collectionItem.framingNotes)
			.map(SUPPORT_TYPE, collectionItem.supportType)
			.map(SUPPORT_NOTES, collectionItem.supportNotes)
			.map(SUPPORT_NUMBER_CODE, collectionItem.supportNumberCode)
			.map(MODIFIED_DATE, collectionItem.modifiedDate)
			.map(MODIFIED_BY, collectionItem.modifiedBy)
			.map(CREATED_DATE, collectionItem.createdDate)
			.map(CREATED_BY, collectionItem.createdBy);
        
        applyPagination(pageable, query, mapping);
        applyOrderById(query);
        
        return loadPage(query, pageable, collectionItem);
    }
    
}
