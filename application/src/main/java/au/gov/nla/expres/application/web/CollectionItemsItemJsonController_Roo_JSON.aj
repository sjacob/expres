// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.gov.nla.expres.application.web;

import au.gov.nla.expres.application.web.CollectionItemsItemJsonController;
import au.gov.nla.expres.model.CollectionItem;
import au.gov.nla.expres.service.api.CollectionItemService;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect CollectionItemsItemJsonController_Roo_JSON {
    
    declare @type: CollectionItemsItemJsonController: @RestController;
    
    declare @type: CollectionItemsItemJsonController: @RequestMapping(value = "/api/collectionitems/{collectionItem}", name = "CollectionItemsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param collectionItemService
     */
    @Autowired
    public CollectionItemsItemJsonController.new(CollectionItemService collectionItemService) {
        this.collectionItemService = collectionItemService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return CollectionItem
     */
    @ModelAttribute
    public CollectionItem CollectionItemsItemJsonController.getCollectionItem(@PathVariable("collectionItem") Long id) {
        CollectionItem collectionItem = collectionItemService.findOne(id);
        if (collectionItem == null) {
            throw new NotFoundException(String.format("CollectionItem with identifier '%s' not found",id));
        }
        return collectionItem;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param collectionItem
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> CollectionItemsItemJsonController.show(@ModelAttribute CollectionItem collectionItem) {
        return ResponseEntity.ok(collectionItem);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param collectionItem
     * @return UriComponents
     */
    public static UriComponents CollectionItemsItemJsonController.showURI(CollectionItem collectionItem) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(CollectionItemsItemJsonController.class).show(collectionItem))
            .buildAndExpand(collectionItem.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedCollectionItem
     * @param collectionItem
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> CollectionItemsItemJsonController.update(@ModelAttribute CollectionItem storedCollectionItem, @Valid @RequestBody CollectionItem collectionItem, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        collectionItem.setId(storedCollectionItem.getId());
        getCollectionItemService().save(collectionItem);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param collectionItem
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> CollectionItemsItemJsonController.delete(@ModelAttribute CollectionItem collectionItem) {
        getCollectionItemService().delete(collectionItem);
        return ResponseEntity.ok().build();
    }
    
}
