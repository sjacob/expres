// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.gov.nla.expres.application.web;

import au.gov.nla.expres.application.web.PageOpeningsItemJsonController;
import au.gov.nla.expres.model.PageOpening;
import au.gov.nla.expres.service.api.PageOpeningService;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect PageOpeningsItemJsonController_Roo_JSON {
    
    declare @type: PageOpeningsItemJsonController: @RestController;
    
    declare @type: PageOpeningsItemJsonController: @RequestMapping(value = "/api/pageopenings/{pageOpening}", name = "PageOpeningsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param pageOpeningService
     */
    @Autowired
    public PageOpeningsItemJsonController.new(PageOpeningService pageOpeningService) {
        this.pageOpeningService = pageOpeningService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return PageOpening
     */
    @ModelAttribute
    public PageOpening PageOpeningsItemJsonController.getPageOpening(@PathVariable("pageOpening") Long id) {
        PageOpening pageOpening = pageOpeningService.findOne(id);
        if (pageOpening == null) {
            throw new NotFoundException(String.format("PageOpening with identifier '%s' not found",id));
        }
        return pageOpening;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param pageOpening
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> PageOpeningsItemJsonController.show(@ModelAttribute PageOpening pageOpening) {
        return ResponseEntity.ok(pageOpening);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param pageOpening
     * @return UriComponents
     */
    public static UriComponents PageOpeningsItemJsonController.showURI(PageOpening pageOpening) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(PageOpeningsItemJsonController.class).show(pageOpening))
            .buildAndExpand(pageOpening.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedPageOpening
     * @param pageOpening
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> PageOpeningsItemJsonController.update(@ModelAttribute PageOpening storedPageOpening, @Valid @RequestBody PageOpening pageOpening, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        pageOpening.setId(storedPageOpening.getId());
        getPageOpeningService().save(pageOpening);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param pageOpening
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> PageOpeningsItemJsonController.delete(@ModelAttribute PageOpening pageOpening) {
        getPageOpeningService().delete(pageOpening);
        return ResponseEntity.ok().build();
    }
    
}
