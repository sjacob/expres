// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.gov.nla.expres.application.web;

import au.gov.nla.expres.application.web.VenueDeserializer;
import au.gov.nla.expres.model.Venue;
import au.gov.nla.expres.service.api.VenueService;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonNode;
import io.springlets.web.NotFoundException;
import java.io.IOException;
import org.springframework.boot.jackson.JsonComponent;
import org.springframework.core.convert.ConversionService;

privileged aspect VenueDeserializer_Roo_EntityDeserializer {
    
    declare @type: VenueDeserializer: @JsonComponent;
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return VenueService
     */
    public VenueService VenueDeserializer.getVenueService() {
        return venueService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param venueService
     */
    public void VenueDeserializer.setVenueService(VenueService venueService) {
        this.venueService = venueService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConversionService
     */
    public ConversionService VenueDeserializer.getConversionService() {
        return conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param conversionService
     */
    public void VenueDeserializer.setConversionService(ConversionService conversionService) {
        this.conversionService = conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param jsonParser
     * @param context
     * @param codec
     * @param tree
     * @return Venue
     * @throws IOException
     */
    public Venue VenueDeserializer.deserializeObject(JsonParser jsonParser, DeserializationContext context, ObjectCodec codec, JsonNode tree) throws IOException {
        String idText = tree.asText();
        Long id = conversionService.convert(idText, Long.class);
        Venue venue = venueService.findOne(id);
        if (venue == null) {
            throw new NotFoundException("Venue not found");
        }
        return venue;
    }
    
}
