// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.gov.nla.expres.service.impl;

import au.gov.nla.expres.model.CollectionItem;
import au.gov.nla.expres.model.DigitalObject;
import au.gov.nla.expres.repository.DigitalObjectRepository;
import au.gov.nla.expres.service.impl.DigitalObjectServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect DigitalObjectServiceImpl_Roo_Service_Impl {
    
    declare @type: DigitalObjectServiceImpl: @Service;
    
    declare @type: DigitalObjectServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private DigitalObjectRepository DigitalObjectServiceImpl.digitalObjectRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param digitalObjectRepository
     */
    @Autowired
    public DigitalObjectServiceImpl.new(DigitalObjectRepository digitalObjectRepository) {
        setDigitalObjectRepository(digitalObjectRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return DigitalObjectRepository
     */
    public DigitalObjectRepository DigitalObjectServiceImpl.getDigitalObjectRepository() {
        return digitalObjectRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param digitalObjectRepository
     */
    public void DigitalObjectServiceImpl.setDigitalObjectRepository(DigitalObjectRepository digitalObjectRepository) {
        this.digitalObjectRepository = digitalObjectRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param digitalObject
     */
    @Transactional
    public void DigitalObjectServiceImpl.delete(DigitalObject digitalObject) {
        // Clear bidirectional many-to-one child relationship with CollectionItem
        if (digitalObject.getDoItem() != null) {
            digitalObject.getDoItem().getPhotos().remove(digitalObject);
        }
        
        getDigitalObjectRepository().delete(digitalObject);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<DigitalObject> DigitalObjectServiceImpl.save(Iterable<DigitalObject> entities) {
        return getDigitalObjectRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void DigitalObjectServiceImpl.delete(Iterable<Long> ids) {
        List<DigitalObject> toDelete = getDigitalObjectRepository().findAll(ids);
        getDigitalObjectRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return DigitalObject
     */
    @Transactional
    public DigitalObject DigitalObjectServiceImpl.save(DigitalObject entity) {
        return getDigitalObjectRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return DigitalObject
     */
    public DigitalObject DigitalObjectServiceImpl.findOne(Long id) {
        return getDigitalObjectRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return DigitalObject
     */
    public DigitalObject DigitalObjectServiceImpl.findOneForUpdate(Long id) {
        return getDigitalObjectRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<DigitalObject> DigitalObjectServiceImpl.findAll(Iterable<Long> ids) {
        return getDigitalObjectRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<DigitalObject> DigitalObjectServiceImpl.findAll() {
        return getDigitalObjectRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long DigitalObjectServiceImpl.count() {
        return getDigitalObjectRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<DigitalObject> DigitalObjectServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getDigitalObjectRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<DigitalObject> DigitalObjectServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getDigitalObjectRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param doItem
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<DigitalObject> DigitalObjectServiceImpl.findByDoItem(CollectionItem doItem, GlobalSearch globalSearch, Pageable pageable) {
        return getDigitalObjectRepository().findByDoItem(doItem, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param doItem
     * @return Long
     */
    public long DigitalObjectServiceImpl.countByDoItem(CollectionItem doItem) {
        return getDigitalObjectRepository().countByDoItem(doItem);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<DigitalObject> DigitalObjectServiceImpl.getEntityType() {
        return DigitalObject.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> DigitalObjectServiceImpl.getIdType() {
        return Long.class;
    }
    
}
