// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.gov.nla.expres.service.impl;

import au.gov.nla.expres.model.TreatementItem;
import au.gov.nla.expres.model.Treatment;
import au.gov.nla.expres.repository.TreatmentRepository;
import au.gov.nla.expres.service.impl.TreatmentServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect TreatmentServiceImpl_Roo_Service_Impl {
    
    declare @type: TreatmentServiceImpl: @Service;
    
    declare @type: TreatmentServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private TreatmentRepository TreatmentServiceImpl.treatmentRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param treatmentRepository
     */
    @Autowired
    public TreatmentServiceImpl.new(TreatmentRepository treatmentRepository) {
        setTreatmentRepository(treatmentRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return TreatmentRepository
     */
    public TreatmentRepository TreatmentServiceImpl.getTreatmentRepository() {
        return treatmentRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param treatmentRepository
     */
    public void TreatmentServiceImpl.setTreatmentRepository(TreatmentRepository treatmentRepository) {
        this.treatmentRepository = treatmentRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param treatment
     */
    @Transactional
    public void TreatmentServiceImpl.delete(Treatment treatment) {
        // Clear bidirectional many-to-one child relationship with TreatementItem
        if (treatment.getTItem() != null) {
            treatment.getTItem().getTreatments().remove(treatment);
        }
        
        getTreatmentRepository().delete(treatment);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Treatment> TreatmentServiceImpl.save(Iterable<Treatment> entities) {
        return getTreatmentRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void TreatmentServiceImpl.delete(Iterable<Long> ids) {
        List<Treatment> toDelete = getTreatmentRepository().findAll(ids);
        getTreatmentRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Treatment
     */
    @Transactional
    public Treatment TreatmentServiceImpl.save(Treatment entity) {
        return getTreatmentRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Treatment
     */
    public Treatment TreatmentServiceImpl.findOne(Long id) {
        return getTreatmentRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Treatment
     */
    public Treatment TreatmentServiceImpl.findOneForUpdate(Long id) {
        return getTreatmentRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Treatment> TreatmentServiceImpl.findAll(Iterable<Long> ids) {
        return getTreatmentRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Treatment> TreatmentServiceImpl.findAll() {
        return getTreatmentRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long TreatmentServiceImpl.count() {
        return getTreatmentRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Treatment> TreatmentServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getTreatmentRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Treatment> TreatmentServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getTreatmentRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param tItem
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Treatment> TreatmentServiceImpl.findByTItem(TreatementItem tItem, GlobalSearch globalSearch, Pageable pageable) {
        return getTreatmentRepository().findByTItem(tItem, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param tItem
     * @return Long
     */
    public long TreatmentServiceImpl.countByTItem(TreatementItem tItem) {
        return getTreatmentRepository().countByTItem(tItem);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Treatment> TreatmentServiceImpl.getEntityType() {
        return Treatment.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> TreatmentServiceImpl.getIdType() {
        return Long.class;
    }
    
}
