// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.gov.nla.expres.service.impl;

import au.gov.nla.expres.model.CollectionItem;
import au.gov.nla.expres.model.Request;
import au.gov.nla.expres.model.TreatementItem;
import au.gov.nla.expres.model.Treatment;
import au.gov.nla.expres.repository.TreatementItemRepository;
import au.gov.nla.expres.service.api.TreatmentService;
import au.gov.nla.expres.service.impl.TreatementItemServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect TreatementItemServiceImpl_Roo_Service_Impl {
    
    declare @type: TreatementItemServiceImpl: @Service;
    
    declare @type: TreatementItemServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private TreatementItemRepository TreatementItemServiceImpl.treatementItemRepository;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private TreatmentService TreatementItemServiceImpl.treatmentService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param treatementItemRepository
     * @param treatmentService
     */
    @Autowired
    public TreatementItemServiceImpl.new(TreatementItemRepository treatementItemRepository, @Lazy TreatmentService treatmentService) {
        setTreatementItemRepository(treatementItemRepository);
        setTreatmentService(treatmentService);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return TreatementItemRepository
     */
    public TreatementItemRepository TreatementItemServiceImpl.getTreatementItemRepository() {
        return treatementItemRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param treatementItemRepository
     */
    public void TreatementItemServiceImpl.setTreatementItemRepository(TreatementItemRepository treatementItemRepository) {
        this.treatementItemRepository = treatementItemRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return TreatmentService
     */
    public TreatmentService TreatementItemServiceImpl.getTreatmentService() {
        return treatmentService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param treatmentService
     */
    public void TreatementItemServiceImpl.setTreatmentService(TreatmentService treatmentService) {
        this.treatmentService = treatmentService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param treatementItem
     * @param treatmentsToAdd
     * @return TreatementItem
     */
    @Transactional
    public TreatementItem TreatementItemServiceImpl.addToTreatments(TreatementItem treatementItem, Iterable<Long> treatmentsToAdd) {
        List<Treatment> treatments = getTreatmentService().findAll(treatmentsToAdd);
        treatementItem.addToTreatments(treatments);
        return getTreatementItemRepository().save(treatementItem);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param treatementItem
     * @param treatmentsToRemove
     * @return TreatementItem
     */
    @Transactional
    public TreatementItem TreatementItemServiceImpl.removeFromTreatments(TreatementItem treatementItem, Iterable<Long> treatmentsToRemove) {
        List<Treatment> treatments = getTreatmentService().findAll(treatmentsToRemove);
        treatementItem.removeFromTreatments(treatments);
        return getTreatementItemRepository().save(treatementItem);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param treatementItem
     * @param treatments
     * @return TreatementItem
     */
    @Transactional
    public TreatementItem TreatementItemServiceImpl.setTreatments(TreatementItem treatementItem, Iterable<Long> treatments) {
        List<Treatment> items = getTreatmentService().findAll(treatments);
        Set<Treatment> currents = treatementItem.getTreatments();
        Set<Treatment> toRemove = new HashSet<Treatment>();
        for (Iterator<Treatment> iterator = currents.iterator(); iterator.hasNext();) {
            Treatment nextTreatment = iterator.next();
            if (items.contains(nextTreatment)) {
                items.remove(nextTreatment);
            } else {
                toRemove.add(nextTreatment);
            }
        }
        treatementItem.removeFromTreatments(toRemove);
        treatementItem.addToTreatments(items);
        // Force the version update of the parent side to know that the parent has changed
        // because it has new books assigned
        treatementItem.setVersion(treatementItem.getVersion() + 1);
        return getTreatementItemRepository().save(treatementItem);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param treatementItem
     */
    @Transactional
    public void TreatementItemServiceImpl.delete(TreatementItem treatementItem) {
        // Clear bidirectional many-to-one child relationship with Request
        if (treatementItem.getRequest() != null) {
            treatementItem.getRequest().getRequestItems().remove(treatementItem);
        }
        
        // Clear bidirectional many-to-one child relationship with CollectionItem
        if (treatementItem.getTItem() != null) {
            treatementItem.getTItem().getTreatments().remove(treatementItem);
        }
        
        // Clear bidirectional one-to-many parent relationship with Treatment
        for (Treatment item : treatementItem.getTreatments()) {
            item.setTItem(null);
        }
        
        getTreatementItemRepository().delete(treatementItem);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<TreatementItem> TreatementItemServiceImpl.save(Iterable<TreatementItem> entities) {
        return getTreatementItemRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void TreatementItemServiceImpl.delete(Iterable<Long> ids) {
        List<TreatementItem> toDelete = getTreatementItemRepository().findAll(ids);
        getTreatementItemRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return TreatementItem
     */
    @Transactional
    public TreatementItem TreatementItemServiceImpl.save(TreatementItem entity) {
        return getTreatementItemRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return TreatementItem
     */
    public TreatementItem TreatementItemServiceImpl.findOne(Long id) {
        return getTreatementItemRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return TreatementItem
     */
    public TreatementItem TreatementItemServiceImpl.findOneForUpdate(Long id) {
        return getTreatementItemRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<TreatementItem> TreatementItemServiceImpl.findAll(Iterable<Long> ids) {
        return getTreatementItemRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<TreatementItem> TreatementItemServiceImpl.findAll() {
        return getTreatementItemRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long TreatementItemServiceImpl.count() {
        return getTreatementItemRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<TreatementItem> TreatementItemServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getTreatementItemRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<TreatementItem> TreatementItemServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getTreatementItemRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param request
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<TreatementItem> TreatementItemServiceImpl.findByRequest(Request request, GlobalSearch globalSearch, Pageable pageable) {
        return getTreatementItemRepository().findByRequest(request, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param tItem
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<TreatementItem> TreatementItemServiceImpl.findByTItem(CollectionItem tItem, GlobalSearch globalSearch, Pageable pageable) {
        return getTreatementItemRepository().findByTItem(tItem, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param request
     * @return Long
     */
    public long TreatementItemServiceImpl.countByRequest(Request request) {
        return getTreatementItemRepository().countByRequest(request);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param tItem
     * @return Long
     */
    public long TreatementItemServiceImpl.countByTItem(CollectionItem tItem) {
        return getTreatementItemRepository().countByTItem(tItem);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<TreatementItem> TreatementItemServiceImpl.getEntityType() {
        return TreatementItem.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> TreatementItemServiceImpl.getIdType() {
        return Long.class;
    }
    
}
